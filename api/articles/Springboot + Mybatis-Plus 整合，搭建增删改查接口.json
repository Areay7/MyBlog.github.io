{"title":"Springboot + Mybatis-Plus 整合，搭建增删改查接口","uid":"b6f03566ceffbd7d08524bfe0927fefc","slug":"Springboot + Mybatis-Plus 整合，搭建增删改查接口","date":"2022-12-05T09:17:19.750Z","updated":"2022-12-05T13:56:29.211Z","comments":true,"path":"api/articles/Springboot + Mybatis-Plus 整合，搭建增删改查接口.json","keywords":null,"cover":null,"content":"<p>配置环境：</p>\n<p>Springboot：2.4.5          Mybatis-plus：3.4.3.4    jdk：1.8   </p>\n<p>所需依赖pom文件：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&lt;build&gt;\n    &lt;plugins&gt;\n        &lt;plugin&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;\n            &lt;artifactId&gt;spring-boot-maven-plugin&lt;&#x2F;artifactId&gt;\n            &lt;version&gt;2.4.5&lt;&#x2F;version&gt;\n        &lt;&#x2F;plugin&gt;\n    &lt;&#x2F;plugins&gt;\n&lt;&#x2F;build&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-test&lt;&#x2F;artifactId&gt;\n        &lt;scope&gt;test&lt;&#x2F;scope&gt;\n    &lt;&#x2F;dependency&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-web&lt;&#x2F;artifactId&gt;\n    &lt;scope&gt;compile&lt;&#x2F;scope&gt;\n&lt;&#x2F;dependency&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&lt;dependency&gt;\n    &lt;groupId&gt;com.baomidou&lt;&#x2F;groupId&gt;\n    &lt;artifactId&gt;mybatis-plus-boot-starter&lt;&#x2F;artifactId&gt;\n    &lt;version&gt;3.4.3.4&lt;&#x2F;version&gt;\n&lt;&#x2F;dependency&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&lt;dependency&gt;\n    &lt;groupId&gt;org.projectlombok&lt;&#x2F;groupId&gt;\n    &lt;artifactId&gt;lombok&lt;&#x2F;artifactId&gt;\n    &lt;version&gt;1.18.20&lt;&#x2F;version&gt;\n&lt;&#x2F;dependency&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&lt;dependency&gt;\n    &lt;groupId&gt;com.alibaba&lt;&#x2F;groupId&gt;\n    &lt;artifactId&gt;fastjson&lt;&#x2F;artifactId&gt;\n    &lt;version&gt;1.2.76&lt;&#x2F;version&gt;\n&lt;&#x2F;dependency&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&lt;dependency&gt;\n    &lt;groupId&gt;mysql&lt;&#x2F;groupId&gt;\n    &lt;artifactId&gt;mysql-connector-java&lt;&#x2F;artifactId&gt;\n    &lt;scope&gt;runtime&lt;&#x2F;scope&gt;\n&lt;&#x2F;dependency&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&lt;dependency&gt;\n    &lt;groupId&gt;com.alibaba&lt;&#x2F;groupId&gt;\n    &lt;artifactId&gt;druid-spring-boot-starter&lt;&#x2F;artifactId&gt;\n    &lt;version&gt;1.1.23&lt;&#x2F;version&gt;\n&lt;&#x2F;dependency&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&lt;dependency&gt;\n            &lt;groupId&gt;junit&lt;&#x2F;groupId&gt;\n            &lt;artifactId&gt;junit&lt;&#x2F;artifactId&gt;\n            &lt;scope&gt;test&lt;&#x2F;scope&gt;\n        &lt;&#x2F;dependency&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>第一步：mysql中建表（sound表）</p>\n<p>SET NAMES utf8mb4;<br>SET FOREIGN_KEY_CHECKS &#x3D; 0;</p>\n<hr>\n<p>DROP TABLE IF EXISTS <code>sound</code>;<br>CREATE TABLE <code>sound</code> (<br>  <code>id</code> int NOT NULL AUTO_INCREMENT,<br>  <code>xuHao1</code> bigint DEFAULT NULL,<br>  <code>xuHao2</code> bigint DEFAULT NULL,<br>  <code>xuHao3</code> bigint DEFAULT NULL,<br>  <code>xuHao4</code> bigint DEFAULT NULL,<br>  <code>xuHao5</code> bigint DEFAULT NULL,<br>  <code>xuHao6</code> bigint DEFAULT NULL,<br>  <code>xuHao7</code> bigint DEFAULT NULL,<br>  <code>xuHao8</code> bigint DEFAULT NULL,<br>  <code>xuHao9</code> bigint DEFAULT NULL,<br>  <code>xuHao10</code> bigint DEFAULT NULL,<br>  <code>xuHao11</code> bigint DEFAULT NULL,<br>  <code>xuHao12</code> bigint DEFAULT NULL,<br>  PRIMARY KEY (<code>id</code>)<br>) ENGINE&#x3D;InnoDB AUTO_INCREMENT&#x3D;4 DEFAULT CHARSET&#x3D;utf8mb4 COLLATE&#x3D;utf8mb4_0900_ai_ci;</p>\n<hr>\n<p>BEGIN;<br>INSERT INTO <code>sound</code> VALUES (1, 2, 3, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1);<br>INSERT INTO <code>sound</code> VALUES (2, 2, 3, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1);<br>INSERT INTO <code>sound</code> VALUES (3, 2, 3, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1);<br>COMMIT;</p>\n<p>SET FOREIGN_KEY_CHECKS &#x3D; 1;</p>\n<p>第二步：配置 application.yml 文件</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">server:\n  port: 8080\nspring:\n  application:\n    name: sound_velocity_experiment\n  datasource:\n    druid:\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      url: jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;test?serverTimezone&#x3D;Asia&#x2F;Shanghai&amp;useUnicode&#x3D;true&amp;characterEncoding&#x3D;utf-8&amp;zeroDateTimeBehavior&#x3D;convertToNull&amp;useSSL&#x3D;false&amp;allowPublicKeyRetrieval&#x3D;true\n      username: root\n      password: root<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">mybatis-plus:\n  configuration:\n    #在映射实体或者属性时，将数据库中表名和字段名中的下划线去掉，按照驼峰命名法映射\n    map-underscore-to-camel-case: false\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n   # 分配id  主键递增(如果没配置，需在对应的实体类中的字段上加入 @TableId(type &#x3D; IdType.AUTO) )\n      id-type: ASSIGN_ID  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>第三步：在 entity 中配置实体类，对应数据库中的表</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@TableName(&quot;sound&quot;)  &#x2F;&#x2F; 对应数据库中的表名\n@AllArgsConstructor  &#x2F;&#x2F; 全参构造器\n@NoArgsConstructor   &#x2F;&#x2F; 无参构造器\n@Data  &#x2F;&#x2F; lombok会自动生成GETTER和SETTER方法\npublic class Sound &#123;\n    private Integer id;\n    private Long xuHao1;\n    private Long xuHao2;\n    private Long xuHao3;\n    private Long xuHao4;\n    private Long xuHao5;\n    private Long xuHao6;\n    private Long xuHao7;\n    private Long xuHao8;\n    private Long xuHao9;\n    private Long xuHao10;\n    private Long xuHao11;\n    private Long xuHao12;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>第四步： 在 Soundmapper 类，操控数据库的地方，继承BaseMapper接口</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;**\n * 继承BaseMapper&lt;Sound&gt;接口，相当于帮你写好通用的CRUD方法\n *&#x2F;\n@Mapper\npublic interface  SoundMapper extends BaseMapper&lt;Sound&gt; &#123;&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>第五步： 启动类上加Mapper扫描注解</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@Slf4j\n@MapperScan(&quot;com&#x2F;areay&#x2F;mapper&quot;)  &#x2F;&#x2F; 指定要扫描mapper的位置\n@SpringBootApplication\npublic class SoundVelocityExperimentApplication &#123;\n    public static void main(String[] args) &#123;   SpringApplication.run(SoundVelocityExperimentApplication.class, args);\n        log.info(&quot;项目启动成功...&quot;);\n    &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>第六步：测试类中写入增删改查测试方法</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@SpringBootTest\n@Slf4j\n@DisplayName(&quot;测试mybatis-plus操作&quot;)\nclass SoundVelocityExperimentApplicationTests &#123;\n    &#x2F;**\n     * 注入实体类\n     *&#x2F;\n    @Autowired\n    SoundMapper soundMapper;\n\n    &#x2F;**\n     * 查询所有\n     *&#x2F;\n    @Test\n    void testselectAll()&#123;\n        &#x2F;&#x2F;         查,selectList获取所有的用户信息\n        List&lt;Sound&gt; sounds &#x3D; soundMapper.selectList(null);\n        sounds.forEach(System.out::println);\n    &#125;\n\n    &#x2F;**\n     * 更新方法\n     *&#x2F;\n    @Test\n    void testupDate()&#123;\n        Sound sound &#x3D; new Sound(1, 21L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L,12L);\n        int update &#x3D; soundMapper.update(sound, null);\n        System.out.println(update);  &#x2F;&#x2F; 返回1说明更新成功\n    &#125;\n\n\n    &#x2F;**\n     * 插入方法\n     *&#x2F;\n    @Test\n    void testInsert()&#123;\n        Sound sound1 &#x3D; new Sound();\n        sound1.setId(3);\n        sound1.setXuHao1(1L);\n        sound1.setXuHao2(1L);\n        sound1.setXuHao3(1L);\n        sound1.setXuHao4(1L);\n        sound1.setXuHao5(1L);\n        sound1.setXuHao6(1L);\n        sound1.setXuHao7(1L);\n        sound1.setXuHao8(1L);\n        sound1.setXuHao9(1L);\n        sound1.setXuHao10(1L);\n        sound1.setXuHao11(1L);\n        sound1.setXuHao12(1L);\n        int insert &#x3D; soundMapper.insert(sound1);\n&#x2F;&#x2F;        打印日志，方便观察\n        log.info(&quot;insert &#x3D;&gt; &quot; ,insert);\n    &#125;\n\n    &#x2F;**\n     * 删除方法\n     *&#x2F;\n    @Test\n    void testDelete()&#123;\n        int delete &#x3D; soundMapper.deleteById(2);   &#x2F;&#x2F;  指定实体类或者id\n        log.warn(&quot;delete &#x3D;&gt; &quot; , delete);\n    &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>第七步： 在 Controller 类中写入对应的业务</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;**\n * 表的控制器\n *&#x2F;\n\n@RestController\n@RequestMapping(&quot;&#x2F;sound&quot;)\npublic class SoundController &#123;\n\n    @Autowired\n    private SoundMapper soundMapper;\n\n\n    &#x2F;**\n     * 返回表中所有用户\n     * @return\n     *&#x2F;\n    @GetMapping\n    public List&lt;Sound&gt; getSounds()&#123;\n        return soundMapper.selectList(null);\n    &#125;\n\n    &#x2F;**\n     * 通过传来的数据，插入用户数据\n     * @param sound\n     * @return\n     *&#x2F;\n    @PostMapping\n    public Boolean saveSound(@RequestBody Sound sound)&#123;\n        int i &#x3D; soundMapper.insert(sound);\n        return i &#x3D;&#x3D; 1;\n    &#125;\n\n    &#x2F;**\n     * 通过传来的数据，更新表\n     * @param sound\n     * @return\n     *&#x2F;\n    @PutMapping\n    public Boolean updateSound(@RequestBody Sound sound)&#123;\n        int update &#x3D; soundMapper.updateById(sound);\n        return update &#x3D;&#x3D; 1;\n    &#125;\n\n    &#x2F;**\n     * 通过用户id删除用户\n     * @param id\n     * @return\n     *&#x2F;\n    @DeleteMapping\n    public Boolean deleteSound(@RequestParam Integer id)&#123;\n        int deleteById &#x3D; soundMapper.deleteById(id);\n        return deleteById &#x3D;&#x3D; 1;\n    &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>第八步： 利用 postman 测试对应的接口</p>\n<p>举例 (post请求)     Body -&gt; raw -&gt; JSON ：</p>\n<p>​    {“id”:”3”,</p>\n<p>​    “xuHao1”: “2”,</p>\n<p>​    “xuHao2”: “3”,</p>\n<p>​    “xuHao3”: “4”,</p>\n<p>​    “xuHao4”: “1”,</p>\n<p>​    “xuHao5”: “1”,</p>\n<p>​    “xuHao6”: “1”,</p>\n<p>​    “xuHao7”: “1”,</p>\n<p>​    “xuHao8”: “1”,</p>\n<p>​    “xuHao9”: “1”,</p>\n<p>​    “xuHao10”: “1”,</p>\n<p>​    “xuHao11”: “1”</p>\n<p>​    }</p>\n","text":"配置环境： Springboot：2.4.5 Mybatis-plus：3.4.3.4 jdk：1.8 所需依赖pom文件： &lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframewo...","link":"","photos":[],"count_time":{"symbolsCount":"8.1k","symbolsTime":"7 mins."},"categories":[],"tags":[],"toc":"","author":{"name":"Areay7","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"此网站为Areay7的个人博客 博主为大二物联网工程专业 物联网工程专业在校生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Linux系统软件安装","uid":"58a538c8f9e0979adba48f5c41a99c95","slug":"Linux系统软件安装","date":"2022-12-05T09:34:14.172Z","updated":"2022-12-05T13:56:14.846Z","comments":true,"path":"api/articles/Linux系统软件安装.json","keywords":null,"cover":[],"text":"实战章节：在Linux上部署各类软件前言为什么学习各类软件在Linux上的部署在前面，我们学习了许多的Linux命令和高级技巧，这些知识点比较零散，同学们跟随着课程的内容进行练习虽然可以基础掌握这些命令和技巧的使用，但是并没有一些具体的实操能够串联起来这些知识点。 所以，现在我们...","link":"","photos":[],"count_time":{"symbolsCount":"53k","symbolsTime":"48 mins."},"categories":[],"tags":[],"author":{"name":"Areay7","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"此网站为Areay7的个人博客 博主为大二物联网工程专业 物联网工程专业在校生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"HTML笔记","uid":"c789e22e2887d4e7a6786d624aa250cf","slug":"HTML笔记","date":"2022-12-05T09:17:16.939Z","updated":"2022-12-05T13:49:10.804Z","comments":true,"path":"api/articles/HTML笔记.json","keywords":null,"cover":null,"text":" 未来记HTML笔记的地方 ","link":"","photos":[],"count_time":{"symbolsCount":15,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Areay7","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"此网站为Areay7的个人博客 博主为大二物联网工程专业 物联网工程专业在校生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}